// <auto-generated>
// DO NOT EDIT
// </auto-generated>

using System.CodeDom.Compiler;
using WowPacketParser.Misc;
using WowPacketParser.Store.Objects;
using WowPacketParser.Store.Objects.UpdateFields;

namespace WowPacketParserModule.V11_0_0_55666.UpdateFields.V11_2_5_63506
{
    [GeneratedCode("UpdateFieldCodeGenerator.Formats.WowPacketParserHandler", "1.0.0.0")]
    public class PlayerData : IPlayerData
    {
        public WowGuid DuelArbiter { get; set; }
        public WowGuid WowAccount { get; set; }
        public WowGuid BnetAccount { get; set; }
        public System.Nullable<ulong> GuildClubMemberID { get; set; }
        public WowGuid LootTargetGUID { get; set; }
        public System.Nullable<uint> PlayerFlags { get; set; }
        public System.Nullable<uint> PlayerFlagsEx { get; set; }
        public System.Nullable<uint> GuildRankID { get; set; }
        public System.Nullable<uint> GuildDeleteDate { get; set; }
        public System.Nullable<int> GuildLevel { get; set; }
        public System.Nullable<byte>[] PartyType { get; } = new System.Nullable<byte>[2];
        public System.Nullable<byte> NativeSex { get; set; }
        public System.Nullable<byte> Inebriation { get; set; }
        public System.Nullable<byte> PvpTitle { get; set; }
        public System.Nullable<byte> ArenaFaction { get; set; }
        public System.Nullable<uint> DuelTeam { get; set; }
        public System.Nullable<int> GuildTimeStamp { get; set; }
        public IQuestLog[] QuestLog { get; } = new IQuestLog[175];
        public IVisibleItem[] VisibleItems { get; } = new IVisibleItem[19];
        public System.Nullable<int> PlayerTitle { get; set; }
        public System.Nullable<int> FakeInebriation { get; set; }
        public System.Nullable<uint> VirtualPlayerRealm { get; set; }
        public System.Nullable<uint> CurrentSpecID { get; set; }
        public System.Nullable<int> CurrentCombatTraitConfigSubTreeID { get; set; }
        public System.Nullable<int> TaxiMountAnimKitID { get; set; }
        public System.Nullable<float>[] AvgItemLevel { get; } = new System.Nullable<float>[6];
        public System.Nullable<byte> CurrentBattlePetBreedQuality { get; set; }
        public System.Nullable<int> HonorLevel { get; set; }
        public System.Nullable<long> LogoutTime { get; set; }
        public IZonePlayerForcedReaction[] ForcedReactions { get; } = new IZonePlayerForcedReaction[32];
        public System.Nullable<int> Field_1AC { get; set; }
        public System.Nullable<int> Field_1B0 { get; set; }
        public System.Nullable<int> CurrentBattlePetSpeciesID { get; set; }
        public ICTROptions CtrOptions { get; set; }
        public System.Nullable<int> CovenantID { get; set; }
        public System.Nullable<int> SoulbindID { get; set; }
        public WowGuid SpectateTarget { get; set; }
        public System.Nullable<int> Field_200 { get; set; }
        public ItemInstance[] VisibleEquipableSpells { get; } = new ItemInstance[16];
        public System.Nullable<uint>[] Field_3120 { get; } = new System.Nullable<uint>[19];
        public IDeclinedNames DeclinedNames { get; set; }
        public ICustomTabardInfo PersonalTabard { get; set; }
        public DynamicUpdateField<IChrCustomizationChoice> Customizations { get; } = new DynamicUpdateField<IChrCustomizationChoice>();
        public DynamicUpdateField<IChrCustomizationChoice> QaCustomizations { get; } = new DynamicUpdateField<IChrCustomizationChoice>();
        public DynamicUpdateField<IQuestLog> QuestSessionQuestLog { get; } = new DynamicUpdateField<IQuestLog>();
        public DynamicUpdateField<IArenaCooldown> ArenaCooldowns { get; } = new DynamicUpdateField<IArenaCooldown>();
        public DynamicUpdateField<System.Nullable<int>> VisualItemReplacements { get; } = new DynamicUpdateField<System.Nullable<int>>();
        public string Name { get; set; }
        public ILeaverInfo LeaverInfo { get; set; }
        public System.Nullable<bool> HasQuestSession { get; set; }
        public System.Nullable<bool> HasLevelLink { get; set; }
        public DynamicUpdateField<IPetCreatureName> PetNames { get; } = new DynamicUpdateField<IPetCreatureName>();
    }
}

